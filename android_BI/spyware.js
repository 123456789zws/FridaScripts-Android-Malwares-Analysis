//camera-Location-deviceReconnaisance-keyloging
var data = {
    camerasOpens: 0,
    camerasPreview: 0,
    imei: 0,
    simOperator: 0,
    lineNumber: 0,
    systemProp: 0,
    callState: 0,
    geographic: 0,
    lastKnownLocation: 0,
    locationListening: 0,
    keylogging: 0
};

Java.perform( function(){
    //monitor camera usage
    var camera = Java.use('android.hardware.Camera')
    camera.open.overload.implementation = function(){
        data.camerasOpens++;
        return this.open();
    }
    camera.open.overload('int').implementation = function(cmNUm){
        data.camerasOpens++;
        return this.open(cmNUm);
    }
    camera.startPreview.implementation = function(){
        data.camerasPreview++;
        return this.startPreview();  
    }
    //Monitor Location
    var Location = Java.use('android.location.Location');
    var locationListener = Java.use('android.location.LocationListener');
    var locationManager = Java.use('android.location.LocationManager');

    let getLastKnownLocation_overloads = locationManager.getLastKnownLocation.overloads;
    getLastKnownLocation_overloads.forEach(function(overload) {
        overload.implementation = function() {
            data.lastKnownLocation++;
            return this['getLastKnownLocation'].apply(this,arguments);
        };
        });

    let onLocationChanged_overloads = locationListener.onLocationChanged.overloads;
    onLocationChanged_overloads.forEach(function(overload) {
        overload.implementation = function() {
            data.locationListening++;
            return this['onLocationChanged'].apply(this,arguments);
        };
    });

    locationListener.onProviderDisabled.implementation = function(provider){
        data.locationListening++;
        this.onProviderDisabled(provider);
    }
    locationListener.onStatusChanged.implementation = function(provider,status,extras){
        data.locationListening++;
        this.onProviderDisabled(provider,status,extras);
    }
    Location.getLatitude.implementation = function() {
        data.geographic++;
        return lt;
    }
    Location.getLongitude.implementation = function() {
        data.geographic++;
        return lgt;
    }

    //Reconnaisance
    var systemProperties = Java.use('android.os.SystemProperties');
    systemProperties.get.overload('java.lang.String').implementation = function(key){
        data.systemProp++;
    return this.get(key);
    
    }
    var telephonyManager = Java.use('android.telephony.TelephonyManager');
    telephonyManager.getCallState.overloads[0].implementation = function(){
        data.callState++;
        return this.getCallState();
    }
    telephonyManager.getCallState.overloads[1].implementation = function(state){
        data.callState++;
        return this.getCallState(state);
    }
    telephonyManager.getDeviceId.overloads[0].implementation = function(){
        data.imei++;
        return this.getDeviceId();
    }
    telephonyManager.getDeviceId.overloads[1].implementation = function(slot){
        data.imei++;
        return this.getDeviceId(slot);
    }

    telephonyManager.getImei.overloads[0].implementation = function(){
        data.imei++;
        return this.getDeviceId();
    }
    telephonyManager.getImei.overloads[1].implementation = function(slot){
        data.imei++;
        return this.getDeviceId(slot);
    }

    telephonyManager.getLine1Number.overloads[0].implementation = function() {
        data.lineNumber++;
        return this.getLine1Number();
    }

    telephonyManager.getSimOperator.overload().implementation = function(){
        data.simOperator++;
        return this.getSimOperator();
    }
    telephonyManager.getSimOperator.overload('int').implementation = function(sm){
        data.simOperator++;
        return this.getSimOperator(sm);
    }

    //keylogger
    var accessibilityNodeInfo = Java.use('android.view.accessibility.AccessibilityNodeInfo');
    accessibilityNodeInfo.getText.implementation = function(){
        ret = this.getText();
        data.keylogging++;
        return ret;  
    }

});

function sendToPython(){
    send(data);
  }
setInterval(sendToPython, 5000);
var data = {
    "GET": 0,
    "POST": 0,
    "UrlCount": 0,
    "DomainsCount": 0,
    "urls": [],
    "domains": []
};

setImmediate(function() {
    Java.perform(function() {
        var URLConnection = Java.use("java.net.URLConnection");
        URLConnection.connect.implementation = function () {
            var method = this.getRequestMethod().toUpperCase();
            if (method === "GET") {
                data.GET += 1;
            } else if (method === "POST") {
                data.POST += 1;
            }
            this.connect();
        };

        var httpURLConnection = Java.use("com.android.okhttp.internal.huc.HttpURLConnectionImpl");
        var httpsURLConnection = Java.use("com.android.okhttp.internal.huc.HttpsURLConnectionImpl");
        httpURLConnection.setRequestMethod.overload('java.lang.String').implementation = function (var0) {
            var method = var0.toUpperCase();
            if (method === "GET") {
                data.GET += 1;
            } else if (method === "POST") {
                data.POST += 1;
            }
            this.setRequestMethod(var0);
        };
        httpsURLConnection.setRequestMethod.overload('java.lang.String').implementation = function (var0) {
            var method = var0.toUpperCase();
            if (method === "GET") {
                data.GET += 1;
            } else if (method === "POST") {
                data.POST += 1;
            }
            this.setRequestMethod(var0);
        };

        // Function to get domain from URL
        function getDomain(urlString) {
            var url = Java.use("java.net.URL").$new(urlString);
            var host = url.getHost();
            return host.replace(/^www\./, '');
        }
        var url = Java.use("java.net.URL");
        url.$init.overload('java.lang.String').implementation = function (var0) {
            // Check for duplicates in urls
            if (!data.urls.includes(var0)) {
                data.urls.push(var0);
                data.UrlCount += 1;
            }
            var domain = getDomain(var0);
            // Check for duplicates in domains
            if (!data.domains.includes(domain)) {
                data.domains.push(domain);
                data.DomainsCount += 1;
            }
            return this.$init(var0);
        };
    });
});

function sendToPython(){
    send(data);
    }
setInterval(sendToPython, 5000);
